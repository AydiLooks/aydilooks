ButtonWithAnimation.css

/* Button Styles */
.custom-button {
    padding: 10px 20px;
    font-size: 16px;
    background-color: #3498db;
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    outline: none;
    transition: background-color 0.3s ease;
  }
  
  /* Button Hover Animation */
  .custom-button:hover {
    background-color: #2980b9;
  }
  .container {
    position: relative;
   }
   
   .bottom-div {
    background-color: lightblue;
    padding: 20px;
    margin-bottom: 20px;
    z-index: 1;
   }
   
   .top-div {
    position: absolute;
    top: 0;
    left: 0;
    background-color: lightgreen;
    padding: 20px;
    z-index: 2;
   }
   /* product css */
   .card{
    width: 50%;
    height:100%;
    border: 2px solid black;
    border-top-right-radius: 1rem;
    border-bottom-left-radius: 1rem;
    border-bottom-right-radius: 1rem;
    border-top-left-radius: 1rem;
    padding:1rem;
    justify-content: center;
    padding: 1rem;
    }
    card:hover{
      transform: scale(1.05);
      box-shadow: 0 4px 8px 0 rgba(0,0
      ,0.2), 0 6px 20px 0 rgba(0
      ,0,0.19)
    }
   /* css for middle one component */
  
    .banner-area{
      height:100vh;
      background-color:rgb(253, 212, 218);
  -webkit-background-size:cover;
  background-size: cover;
  background-position: center center;  }
 

  



    /* media queries for single product page */
    .content {
      display: grid;
      grid-template-columns: repeat(2, minmax(0, 1fr));
      gap: 2rem;
    
    }
    
    @media (max-width: 1199px) {
      .content {
        grid-template-columns: repeat(2, minmax(0, 1fr));
      }
      /* Adjust other styles for tablet screens */
    }
    
    /* Mobile screens (up to 767px) */
    @media (max-width: 767px) {
      .content {
        grid-template-columns: repeat(1, minmax(0, 1fr));
      }
      /* Adjust other styles for mobile screens */
      .text-6xl {
        font-size: 3rem; /* Example: Reduce font size for mobile screens */
      }
      /* Add more styles as needed for mobile screens */
    }



    /* middle section */
 /* Reset default button styles */

/* CSS */
.button-86 {
  all: unset;
  width: 100px;
  height: 30px;
  font-size: 16px;
  background: transparent;
  border: none;
  position: relative;
  color: #f0f0f0;
  cursor: pointer;
  z-index: 1;
  padding: 10px 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
}

.button-86::after,
.button-86::before {
  content: '';
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: -99999;
  transition: all .4s;
}

.button-86::before {
  transform: translate(0%, 0%);
  width: 100%;
  height: 100%;
  background: #28282d;
  border-radius: 10px;
}

.button-86::after {
  transform: translate(10px, 10px);
  width: 35px;
  height: 35px;
  background: #ffffff15;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  border-radius: 50px;
}

.button-86:hover::before {
  transform: translate(5%, 20%);
  width: 110%;
  height: 110%;
}

.button-86:hover::after {
  border-radius: 10px;
  transform: translate(0, 0);
  width: 100%;
  height: 100%;
}

.button-86:active::after {
  transition: 0s;
  transform: translate(0, 5%);
}


/* Responsive sizing */
@media screen and (max-width: 768px) {
  button {
    font-size: 14px;
    padding: 8px 16px;
  }
}

    /* Button in list view */
    .btn2 {
      --border-color: linear-gradient(-45deg, #ffae00, #7e03aa, #00fffb);
      --border-width: .125em;
      --curve-size: .5em;
      --blur: 30px;
      --bg: #080312;
      --color: #afffff;
      color: var(--color);
        /* use position: relative; so that BG is only for .btn */
      position: relative;
      isolation: isolate;
      display: inline-grid;
      place-content: center;
      padding: .5em 1.5em;
      font-size: 17px;
      border: 0;
      text-transform: uppercase;
      box-shadow: 10px 10px 20px rgba(0, 0, 0, .6);
      clip-path: polygon(
                /* Top-left */
                0% var(--curve-size),
    
                var(--curve-size) 0,
                /* top-right */
                100% 0,
                100% calc(100% - var(--curve-size)),
    
                /* bottom-right 1 */
                calc(100% - var(--curve-size)) 100%,
                /* bottom-right 2 */
                0 100%);
      transition: color 250ms;
    }
    
    .btn2::after,
    .btn2::before {
      content: '';
      position: absolute;
      inset: 0;
    }
    
    .btn2::before {
      background: var(--border-color);
      background-size: 300% 300%;
      animation: move-bg7234 5s ease infinite;
      z-index: -2;
    }
    
    @keyframes move-bg7234 {
      0% {
        background-position: 31% 0%
      }
    
      50% {
        background-position: 70% 100%
      }
    
      100% {
        background-position: 31% 0%
      }
    }
    
    .btn2::after {
      background: var(--bg);
      z-index: -1;
      clip-path: polygon(
                /* Top-left */
                var(--border-width) 
                calc(var(--curve-size) + var(--border-width) * .5),
    
                calc(var(--curve-size) + var(--border-width) * .5) var(--border-width),
    
                /* top-right */
                calc(100% - var(--border-width)) 
                var(--border-width),
    
                calc(100% - var(--border-width)) 
                calc(100% - calc(var(--curve-size) + var(--border-width) * .5)),
    
                /* bottom-right 1 */
                calc(100% - calc(var(--curve-size) + var(--border-width) * .5)) calc(100% - var(--border-width)),
                /* bottom-right 2 */
                var(--border-width) calc(100% - var(--border-width)));
      transition: clip-path 500ms;
    }
    
    .btn2:where(:hover, :focus)::after {
      clip-path: polygon(
                    /* Top-left */
                    calc(100% - var(--border-width)) 
    
                    calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
        
                    calc(100% - var(--border-width))
    
                    var(--border-width),
        
                    /* top-right */
                    calc(100% - var(--border-width))
    
                     var(--border-width),
        
                    calc(100% - var(--border-width)) 
    
                    calc(100% - calc(var(--curve-size) + var(--border-width) * .5)),
        
                    /* bottom-right 1 */
                    calc(100% - calc(var(--curve-size) + var(--border-width) * .5)) 
                    calc(100% - var(--border-width)),
    
                    /* bottom-right 2 */
                    calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5))
                    calc(100% - var(--border-width)));
      transition: 200ms;
    }
    
    .btn2:where(:hover, :focus) {
      color: #fff;
    }

    /* grid view btn */
    #checkbox {
      display: none;
    }
    
    .toggle {
      position: relative;
      width: 40px;
      height: 30px;
      cursor: pointer;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      gap: 10px;
      transition-duration: .3s;
    }
    
    .bars {
      width: 100%;
      height: 4px;
      background-color:black;
      border-radius: 5px;
      transition-duration: .3s;
    }
    
    /* #checkbox:checked + .toggle .bars {
      margin-left: 13px;
    } */
    
    #checkbox:checked + .toggle #bar2 {
      transform: translateY(14px) rotate(60deg);
      margin-left: 0;
      transform-origin: right;
      transition-duration: .3s;
      z-index: 2;
    }
    
    #checkbox:checked + .toggle #bar1 {
      transform: translateY(28px) rotate(-60deg);
      transition-duration: .3s;
      transform-origin: left;
      z-index: 1;
    }
    
    #checkbox:checked + .toggle {
      transform: rotate(-90deg);
    }
    /* middleone */

    .ball {
      position: absolute;
      width: 5vw; /* Responsive width based on viewport width */
      height: 5vw; /* Responsive height based on viewport width */
      border-radius: 50%;
      background-color: #ff6347; /* Change the color as needed */
      animation: move 10s infinite alternate linear, bounceX 4s infinite linear, bounceY 2s infinite alternate linear;
    }

    @keyframes move {
      from {
        transform: translateY(0) rotate(0deg);
      }
      to {
        transform: translateY(20vh) rotate(360deg);
      }
    }

    @keyframes bounceX {
      0%, 100% {
        transform: translateX(0);
      }
      50% {
        transform: translateX(90vw);
      }
    }

    @keyframes bounceY {
      0%, 100% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(30vh);
      }
    }

    @media (max-width: 600px) {
      /* Adjust styles for smaller screens */
      .ball {
        width: 10vw;
        height: 10vw;
      }
    }
    /* button */
    